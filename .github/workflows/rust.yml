name: Rust CI and Release

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*.*.*'  # 匹配语义化版本标签，如 v1.0.0
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  PROJECT_NAME: your-project-name  # 替换为你的项目名称

jobs:
  build_and_test:
    strategy:
      matrix:
        platform: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.platform }}
    name: Build and Test on ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v4
    
    # 使用官方推荐的 Rust 安装 Action
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
    
    - name: Build
      run: cargo build --verbose
    
    - name: Run tests
      run: cargo test --verbose

  create_release:
    needs: build_and_test  # 依赖构建任务
    if: startsWith(github.ref, 'refs/tags/v')  # 仅在标签推送时运行
    runs-on: ubuntu-latest
    name: Create Release
    
    steps:
    - uses: actions/checkout@v4
      
    # 使用官方推荐的 Rust 安装 Action
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: stable
        targets: x86_64-unknown-linux-gnu, x86_64-pc-windows-msvc, x86_64-apple-darwin
    
    - name: Build Release Binaries
      run: |
        cargo build --release --target x86_64-unknown-linux-gnu
        cargo build --release --target x86_64-pc-windows-msvc
        cargo build --release --target x86_64-apple-darwin
        
    - name: Package Binaries
      run: |
        mkdir -p release
        # Linux
        tar czf release/${{ env.PROJECT_NAME }}-linux-x86_64.tar.gz -C target/x86_64-unknown-linux-gnu/release ${{ env.PROJECT_NAME }}
        # Windows
        zip -j release/${{ env.PROJECT_NAME }}-windows-x86_64.zip target/x86_64-pc-windows-msvc/release/${{ env.PROJECT_NAME }}.exe
        # macOS
        tar czf release/${{ env.PROJECT_NAME }}-macos-x86_64.tar.gz -C target/x86_64-apple-darwin/release ${{ env.PROJECT_NAME }}
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        body: |
          Release ${{ github.ref_name }}
          Built for multiple platforms
        draft: false
        prerelease: false
        files: |
          release/${{ env.PROJECT_NAME }}-linux-x86_64.tar.gz
          release/${{ env.PROJECT_NAME }}-windows-x86_64.zip
          release/${{ env.PROJECT_NAME }}-macos-x86_64.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
